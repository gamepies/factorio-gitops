apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/configmap-config: {{ include (print $.Template.BasePath "/configmap-config.yaml") . | sha256sum }}
      labels:
        app: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Release.Name }}
      securityContext:
        runAsUser: 845
        runAsGroup: 845
        fsGroup: 845
      initContainers:
      - name: initialize-credentials
        image: alpine:latest
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 0
        command:
        - /bin/sh
        - -c
        - |
          apk add --no-cache jq && \
          cp -rL /config-source/* /config-adjusted && \
          ls -lah /config-source && \
          ls -lah /config-adjusted && \
          jq '.password = env.ACCOUNT_PASSWORD | .game_password = env.GAME_PASSWORD' /config-adjusted/server-settings.json > /config-adjusted/server-settings.tmp && \
          mv /config-adjusted/server-settings.tmp /config-adjusted/server-settings.json && \
          chown -R 845:845 /config-adjusted && \
          ls -lah /config-adjusted 
        env:
        - name: ACCOUNT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Chart.Name }}-credentials
              key: accountPassword
        - name: GAME_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Chart.Name }}-credentials
              key: gamePassword
        volumeMounts:
        - name: config-source
          mountPath: /config-source
        - name: config-adjusted
          mountPath: /config-adjusted
      containers:
      - image: 'factoriotools/factorio:{{ .Values.image.tag }}'
        name: {{ .Release.Name }}
        imagePullPolicy: IfNotPresent
        tty: {{ .Values.pod.isTtyEnabled }}
        stdin: {{ .Values.pod.isStdinEnabled }}
        env:
        - name: "PORT"
          value: "34197"
        - name: "BIND"
          value: "0.0.0.0" 
        - name: "DLC_SPACE_AGE" 
          value: {{ .Values.environment.DLC_SPACE_AGE | quote}}
        - name: "LOAD_LATEST_SAVE"
          value: {{ .Values.environment.LOAD_LATEST_SAVE | quote }}
        - name: "GENERATE_NEW_SAVE"
          value: {{ .Values.environment.GENERATE_NEW_SAVE | quote }}
        - name: "SAVE_NAME"
          value: {{ .Values.environment.SAVE_NAME }}
        ports:
        - name: udp
          containerPort: 34197
          protocol: UDP
        - name: tcp
          containerPort: 27015
          protocol: TCP
        resources:
          limits:
            cpu: {{ .Values.pod.resources.cpu.limit }}
            memory: {{ .Values.pod.resources.memory.limit }}
          requests:
            cpu: {{ .Values.pod.resources.cpu.request }}
            memory: {{ .Values.pod.resources.memory.request }}
        volumeMounts:
        - name: config-adjusted
          mountPath: /factorio/config
        - name: saves
          mountPath: /factorio/saves
      volumes:
      - name: config-source
        configMap:
          name: {{ .Release.Name }}-config
      - name: config-adjusted
        emptyDir: {}
      - name: saves
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-saves-claim

